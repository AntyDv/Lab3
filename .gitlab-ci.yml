# 📦 Imagen base con Python 3.10
image: python:3.10

# 🔄 Definición de etapas del pipeline
stages:
  - test_and_metrics
  - report

# 🧪 1️⃣ Ejecución de tests y métricas de cobertura
run_tests_metrics:
  stage: test_and_metrics
  script:
    - echo "Instalando dependencias..."
    - pip install pytest pytest-cov
    - echo "Ejecutando tests y generando métricas..."
    - pytest --cov=src.calculator --cov-report=xml:coverage.xml --cov-report=term-missing -v
    - echo "Archivos generados:"
    - ls -l
  coverage: /TOTAL.*(\d+%)/
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    paths:
      - coverage.xml
    expire_in: 1 week

# 🌐 2️⃣ Generación del reporte HTML (opcional)
generate_html_report:
  stage: report
  needs: ["run_tests_metrics"]
  script:
    - pip install pytest pytest-cov
    - echo "Generando reporte HTML de cobertura..."
    - pytest --cov=src.calculator --cov-report=html
    - echo "Reporte HTML generado correctamente."
  artifacts:
    paths:
      - htmlcov/
    expire_in: 1 week
