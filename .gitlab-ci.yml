# Definición de la imagen base con Python
image: python:3.10

# Definición de las etapas del pipeline
stages:
  - install
  - test_and_metrics
  - report

# Job: Instalación de Dependencias
install_dependencies:
  stage: install
  script:
    - echo "Instalando dependencias..."
    - pip install pytest pytest-cov

# Job: Ejecución de Tests y Medición de Cobertura
run_tests_metrics:
  stage: test_and_metrics
  needs: ["install_dependencies"]
  script:
    - echo "Ejecutando tests y generando métricas..."
    # Ejecuta tests y genera el reporte de cobertura en formato Cobertura XML para GitLab
    - pytest --cov src.calculator --cov-report xml:coverage.xml
    # Ejecuta tests con reporte de cobertura en terminal (como en el lab)
    - pytest --cov src.calculator --cov-report term-missing
    
  # Configuración para que GitLab extraiga la métrica de cobertura de código
  coverage: /TOTAL.*(\d+%)/
  
  # Artefactos: Se guardan para ser consumidos en jobs posteriores o para descargar
  artifacts:
    reports:
      # Reporte de Cobertura en formato Cobertura para visualización en Merge Requests
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

# Job: Generación y Subida de Reporte HTML (Opcional, similar a 'upload-artifact')
generate_html_report:
  stage: report
  needs: ["run_tests_metrics"]
  script:
    - echo "Generando reporte HTML de cobertura..."
    # Comando para generar el reporte HTML
    - pytest --cov src.calculator --cov-report=html
  
  # Se sube el directorio htmlcov como un artefacto
  artifacts:
    paths:
      - htmlcov/
    expire_in: 1 week # El artefacto se mantiene por una semana